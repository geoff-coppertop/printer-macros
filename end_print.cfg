[gcode_macro END_PRINT]
# Put the following in the Cura end code and remove everything else:
# END_PRINT

variable_stage: None ## hot -> cooling -> done -> None
 
## in seconds
variable_check_interval: 30
variable_total_time_elapsed: 0

gcode:
  SET_GCODE_VARIABLE MACRO=END_PRINT VARIABLE=stage               VALUE="'hot'"
  SET_GCODE_VARIABLE MACRO=END_PRINT VARIABLE=total_time_elapsed  VALUE=0

  # restore idle_timeout time if needed
  {% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
    SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
  {% endif %}
  
  CANCEL_HEAT_SOAK

  PARK_TOOLHEAD
  
  UPDATE_DELAYED_GCODE ID=end_print_cooler DURATION=1

  M82         # Absolute extrusion mode
  M84 X Y E   # Disable all steppers but Z

  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False

  # clear pause_next_layer and pause_at_layer as preparation for next print
  SET_PAUSE_NEXT_LAYER ENABLE=0
  SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
  
[gcode_macro _CANCEL_END_PRINT]
description: cancels an in-progress cooling cycle
gcode:
  SET_GCODE_VARIABLE MACRO=END_PRINT VARIABLE=stage VALUE="'cancel'"
  UPDATE_DELAYED_GCODE ID=end_print_cooler DURATION=1

[delayed_gcode end_print_cooler]
gcode:
  {% set end_print = printer['gcode_macro END_PRINT'] %}
  {% set stage = end_print.stage %}
 
  ## update total time elapsed
  {% set total_time_elapsed = end_print.total_time_elapsed + end_print.check_interval %}
  SET_GCODE_VARIABLE MACRO=END_PRINT VARIABLE=total_time_elapsed VALUE={ total_time_elapsed }

  {% if stage == "hot" %}
    M106 S255           # full fan

    TURN_OFF_HEATERS

    {% set stage = "cooling" %}
  {% endif %}

  {% if stage == "cooling" %}
    {% set bed_temp = printer.heater_bed.temperature|float %}
    {% set extruder_temp = printer.extruder.temperature|float %}
    
    {% if (extruder_temp <= 50) and (bed_temp <= 50) %}
      {% set stage = "done" %}
    {% endif %}
  {% endif %}

  M117 { "cooling -- %.1fm elapsed" | format(total_time_elapsed / 60.0) }
  
  {% if stage in ("done", "cancel") %}
    M107    # turn off fan

    ## reset all state vars, except stage, which may be queried via the api
    SET_GCODE_VARIABLE MACRO=END_PRINT VARIABLE=total_time_elapsed  VALUE=0

    {% set stage = "done" %}
  {% else %} 
    ## trigger ourselves again
    UPDATE_DELAYED_GCODE ID=end_print_cooler DURATION={ end_print.check_interval }

    ## dwell for 1ms to prevent from going idle
    G4 P1
  {% endif %}
  
  SET_GCODE_VARIABLE MACRO=END_PRINT VARIABLE=stage VALUE="'{ stage }'"
